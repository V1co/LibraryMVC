@model LibraryMVC.Core.ViewModels.CustomersViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="container" style="margin-top:30px; padding-bottom:50px;">
<h2>Customer Editor</h2>
    <div class="container" style="margin-top:30px; margin-bottom:30px;">
        <div class="form-horizontal">
            <hr style="max-width:500px;" />

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.CustomerId)

                    <div class="container">
                        @Html.HiddenFor(model => model.CustomerFirstName)
                    </div>

                    <div class="container">
                        @Html.HiddenFor(model => model.CustomerName)
                    </div>

                    <div class="form-group">
                        <h4 class="text-center" style="padding-bottom: 20px;">List of books borrowed by: @Model.CustomerFirstName @Model.CustomerName</h4>
                        <div class="table-responsive">
                            <table class="table">
                                <thead class="thead-dark">
                                    <tr>
                                        <th scope="col" style="height: 40px;"></th>
                                        <th scope="col" style="height: 40px;"></th>
                                    </tr>
                                </thead>
                                @for (int i = 0; i < Model.BorrowedBooks.Count(); i++)
                                {
                                    <tr>
                                        <td class="text-center">@Html.DisplayFor(m => Model.BorrowedBooks[i].Name)</td>
                                        <td style="padding-left: 150px">@Html.EditorFor(m => Model.BorrowedBooks[i].Borrowed)</td>
                                        @Html.HiddenFor(m => Model.BorrowedBooks[i].Name)
                                        @Html.HiddenFor(m => Model.BorrowedBooks[i].Id)
                                    </tr>
                            }
                            </table>
                        </div>
                    </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-12 text-center">
                                <input type="submit" value="Save" class="btn btn-primary" />
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
                            </div>
                        </div>
                </div>
            }

        </div>
    </div>
</div>

@section Scripts {
   @Scripts.Render("~/bundles/jqueryval")
}
