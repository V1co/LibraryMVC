@model LibraryMVC.WebUI.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

    <div class="container text-center align-content-center" style="margin-top:30px; padding-bottom:50px;">
        <h2>@ViewBag.Title.</h2>

        @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="form-group text-center font-weight-bold" style="font-size: 18px; padding-top: 20px;">
                @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
                <div class="col-xl-4 col-lg-4 col-md-8 col-sm-10 mx-auto">
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group text-center font-weight-bold" style="font-size: 18px">
                @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
                <div class="col-xl-4 col-lg-4 col-md-8 col-sm-10 mx-auto">
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group text-center font-weight-bold" style="font-size: 18px">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
                <div class="col-xl-4 col-lg-4 col-md-8 col-sm-10 mx-auto">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group text-center font-weight-bold" style="font-size: 18px">
                <div class="col-xl-4 col-lg-4 col-md-8 col-sm-10 mx-auto">
                    <input type="submit" value="Change password" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
